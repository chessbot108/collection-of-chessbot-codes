#include <fstream>
#include <iostream>
#include <cmath>
#include <algorithm>
#include <cstring>
#include <cstdio>
#include <cstdlib>
#include <vector>
#include <map>
#include <bitset>
#include <queue>
#include <unordered_map>
#include <set>
#include <string>
#include <sstream>

#define cont continue
#define int_max 0x3fffffff
#define byte_max 0x3f
#define max_v 1010
 


using namespace std;
vector<string> vec;

int main(){
	string dashes (60, '-');
	int n;
	while(cin >> n){
		vec.clear();
		int max_l = 0;
		for(int i = 0; i<n; i++){
			string a;
			cin >> a;
			vec.push_back(a);
			max_l = max(max_l, (int)a.size());
		}
		
		sort(vec.begin(), vec.end());
		
		int col_n = 1;
		
		if(max_l != 60){
		
			while(col_n * max_l + (col_n - 1) * 2 <= 60){
				col_n++;
			}
			
			col_n--;
		}
		
		int row_n = (vec.size() + (col_n -1)) / col_n; // achieves the ciel effect without using doubles
		
		
		cout << dashes << endl;
	
		for(int i = 0; i<row_n; i++){
			for(int j = 0; i + j <vec.size(); j+=row_n){
				if(i + j >= vec.size()) break;
				string spaces ((max_l + 2) - vec[i + j].size(), ' ');
				cout << vec[i + j] + spaces;
			}
			cout << endl;
		}
		
	}
	return 0;
}


