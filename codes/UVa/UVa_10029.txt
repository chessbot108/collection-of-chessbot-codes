
#include <iostream>
#include <cmath>
#include <algorithm>
#include <cstring>
#include <cstdio>
#include <cstdlib>
#include <vector>
#include <map>
#include <stack>
#include <bitset>
#include <queue>
#include <unordered_map>
#include <set>
#include <string>
#include <sstream>
#include <functional>
#include <list>
#include <fstream>

#define cont continue
#define int_max 0x3f3f3f3f
#define max_v 11000

using namespace std;

map<string, int> dp;
vector<string> arr;
int ans = 0;



void process(int ind){
	string cur = arr[ind];
	int best = 0;
	for(int i = 0; i<cur.size(); i++){
		for(char c = 'a'; c<='z'; c++){
			string temp = cur;
			temp.replace(i, 1, 1, c);
			if(dp.count(temp)) best = max(best, dp[temp]);
		}
		string temp = cur;
		temp.erase(i, 1);
		if(dp.count(temp)) best = max(best, dp[temp]);
	}
	
	
	for(int i = 0; i<=cur.size(); i++){
		for(char c = 'a'; c<='z'; c++){
			string temp = cur;
			temp.insert(i, 1, c);
			if(dp.count(temp)) best = max(best, dp[temp]);
		}
	}
	
	dp.insert(make_pair(cur, best + 1));
	ans = max(ans, dp[cur]);
}

int main() {
  	string s;
  	while(cin >> s){
  		if(s == "0") break;
  		arr.push_back(s);
	}
  	
  	for(int i = 0; i<arr.size(); i++){
  		process(i);
	}
	
	cout << ans << endl;
  	
  	
  	return 0;
}

