
#include <iostream>
#include <cmath>
#include <algorithm>
#include <cstring>
#include <cstdio>
#include <cstdlib>
#include <vector>
//#include <map>
#include <stack>
#include <bitset>
#include <queue>
#include <unordered_map>
#include <set>
#include <string>
#include <sstream>
#include <functional>
#include <list>
#include <fstream>

#define cont continue
#define int_max 0x3fffffff
#define byte_max 0x3f
#define max_v 60

using namespace std;

bool map[max_v][max_v];
vector<int> sol;
int total = 0;
int n;
void floodfill(int x, int y){
    if(x < 0 || y < 0 || x >= n || y >= n || map[x][y])
        return ;
    
    if(x == n-1 && y == n-1){
        sol.push_back(total + 1);
        return ;
    }
    
    map[x][y] = true;
    total++;
    floodfill(x + 1, y);
    floodfill(x, y + 1);
    floodfill(x - 1, y);
    floodfill(x, y - 1);
    total--;
    map[x][y] = false;
}

int main() {
    cin >> n;
    for(int i = 0; i<n; i++){
        for(int j = 0; j<n; j++){
            cin >> map[i][j];   
        }
    }
    
    floodfill(0, 0);
    
    sort(sol.begin(), sol.end());
    int cnt = 1;
    for(int i = 1; i<sol.size(); i++){
        if(sol[i] != sol[0]) break;
        cnt++;
    }
    cout << cnt << endl << sol[0];
    
  	return 0;
}