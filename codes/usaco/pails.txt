
#include <iostream>
#include <cmath>
#include <algorithm>
#include <cstring>
#include <cstdio>
#include <cstdlib>
#include <vector>
#include <map>
#include <stack>
#include <bitset>
#include <queue>
#include <set>
#include <string>
#include <list>
#include <fstream>

#define cont continue
#define int_max 0x3f3f3f3f
#define byte_max 0x3f
#define max_v 110

#define cin fin
#define cout fout
using namespace std;

ifstream fin("pails.in");
ofstream fout("pails.out");

int dp[max_v][max_v];
int mini = int_max;
int X, Y, K, M;




void dfs(int x, int y, int ops){
	
	if(ops > K || dp[x][y] < ops){
		return;
	}
	
	dp[x][y] = ops;
	
	mini = min(mini, abs(M - (x + y)));
	
	//printf("%d %d %d\n", x, y, ops);
	
	ops++;
	
	dfs(0, y, ops); //empty x
	dfs(x, 0, ops); //empty y
	
	dfs(X, y, ops); //fill x
	dfs(x, Y, ops); //fill y
	
	int c_x = X - x;
	int c_y = Y - y;
	
	if(c_x > y){
		dfs(x + y, 0, ops);
	}else{
		dfs(X, y - c_x, ops);
	}
	
	
	if(c_y > x){
		dfs(0, x + y, ops);
	}else{
		dfs(x - c_y, Y, ops);
	}
	
	
}



int main() {
  	cin >> X >> Y >> K >> M;
	memset(dp, byte_max, sizeof(dp));
	dfs(0, 0, 0);
	
	cout << mini;
  	
  	
  	return 0;
}
