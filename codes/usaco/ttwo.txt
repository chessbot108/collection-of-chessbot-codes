/**
 NAME: weiming2
 LANG: C++14
 TASK: ttwo
**/
#include <iostream>
#include <string>
#include <queue>
#include <stack>
#include <vector>
#include <cmath>
#include <cstdlib>
#include <algorithm>
#include <cstring>
#include <cstdio>
#include <iomanip>
#include <list>
#include <cctype>
#include <map>
#include <set>

#define N 11
#define cont continue
#define cin fin
#define cout fout
using namespace std;
ifstream fin("ttwo.in");
ofstream fout("ttwo.out");
struct pos{
    int x;
    int y;
    int dir;    
} john, cow;




const int n = 10;
const int row[] = {-1, 0, 1, 0};
const int col[] = {0, 1, 0, -1};
char farm[N][N];
set<pair<int, int>> vis;

int HASH(const pos& a){
    return a.x*100 + a.y*10 + a.dir;
}

void move(pos& a){
    a.dir %= 4;
    int change_x = a.x + row[a.dir];
    int change_y = a.y + col[a.dir];
    if(change_x < 0 || change_y < 0 || change_x >= n ||change_y >= n || farm[change_x][change_y] == '*'){
        a.dir++;
    }else{
        a.x = change_x;
        a.y = change_y;
       
    }
}

void print(){
    for(int i = 0; i<n; i++){
        for(int j = 0; j<n; j++){
            if(i == john.x && j == john.y) cout << "F";  
            else if(i == cow.x && j == cow.y) cout <<"C";
            else cout << farm[i][j];
        }
        cout << endl;
    }
   
}



int main(){
   
    for(int i = 0; i<n; i++){
        for(int j = 0; j<n; j++){
            cin >> farm[i][j];
            if(farm[i][j] == 'F'){
                john = {i, j, 0};
                farm[i][j] = '.';
            }else if(farm[i][j] == 'C'){
                cow = {i, j, 0};
                farm[i][j] = '.';
            }
        }
    }
    //print();
    int total = 0;
    while(HASH(john)/10 != HASH(cow)/10){ //ignoring directions
        //printf("%d:\n\t%d %d %d\n\t%d %d %d\n", total + 1, john.x, john.y, john.dir, cow.x, cow.y, cow.dir);
       
        total++;
        auto ret = vis.insert(make_pair(HASH(john), HASH(cow)));
        //cout << ret.second<< endl;
        if(!ret.second){ total = 0; break; }
       
       
       
        move(john);
        move(cow);
       
        //print();
    }
   
    cout << total << endl;
   
   
   
    return 0;
}
