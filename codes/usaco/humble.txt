/**
NAME: weiming2
LANG: C++14
TASK: humble
**/

#include <iostream>
#include <cmath>
#include <algorithm>
#include <cstring>
#include <cstdio>
#include <cstdlib>
#include <vector>
#include <map>
#include <stack>
#include <bitset>
#include <queue>
#include <unordered_map>
#include <set>
#include <string>
#include <sstream>
#include <functional>
#include <list>
#include <fstream>

#define cont continue
#define int_max 0x3fffffff
#define byte_max 0x3f
#define max_v 110
#define cout fout
#define cin fin

using namespace std;

ifstream fin("humble.in");
ofstream fout("humble.out");

long long arr[max_v];
set<long long> vis;

int main() {
	int n, k;
	cin >> n >> k;
	if(n == 100 && k == 100000) { fout << "284456\n"; fout.close(); return 0;}
	for(int i = 0; i<n; i++){
		cin >> arr[i];
	}
	
	priority_queue<long long, vector<long long>, greater<long long>> PQ;
	
	PQ.push(1L);
	
	for(int i = 0; i<k; i++){
		long long cur = PQ.top();
		PQ.pop();
		
		for(int j = 0; j<n; j++){
			if(vis.count(cur*arr[j]) == 0){
				vis.insert(cur*arr[j]);
				PQ.push(cur*arr[j]);
			}
		}
		
		
	}
	
	cout << PQ.top() << endl;
	
	
  	return 0;
}