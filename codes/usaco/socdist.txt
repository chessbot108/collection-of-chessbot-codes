
#include <iostream>
#include <cmath>
#include <algorithm>
#include <cstring>
#include <cstdio>
#include <cstdlib>
#include <vector>
#include <map>
#include <stack>
#include <bitset>
#include <queue>
#include <set>
#include <unordered_set>
#include <string>
#include <list>
#include <fstream>

#define cont continue
#define int_max 0x3f3f3f3f
#define byte_max 0x3f
#define max_v 11000


using namespace std;
vector<pair<long long, long long>> vec;
long long n, m;


bool check(long long x) {
    long long prev = -1e18 - 10, cows = 0;
    
    
  	for(int i = 0; i < m; i++){
     	long long a = vec[i].first, b = vec[i].second;
  	    if(a - prev < x) a += x - (a - prev);
  	      	
    	if(a > b) cont; //invalid
    	
    	long long leftover = (b - a)%x;
    	
	    b -= leftover;
	    
		if(a > b) cont;
		
     	cows += ((b - a)/x) + 1LL;
     	prev = b;
  	}
  	
  	return cows >= n;
}	


long long bin_search(){
	long long l = 1LL;
	long long r = 1e18 + 10LL;
	while(l < r){
		long long mid = (l + r + 1)/2LL;
		if(check(mid)) l = mid;
		else r = mid - 1LL;
	}
	
	return r;
}

int main() {
	freopen("socdist.in", "r", stdin);
	freopen("socdist.out", "w+", stdout);
	
	scanf("%lld%lld", &n, &m);
	for(int i = 0; i<m; i++){
		long long a, b;
		scanf("%lld%lld", &a, &b);
		vec.push_back(make_pair(a, b));
	}
	
	sort(vec.begin(), vec.end());
	
  	cout << bin_search();
  	
	return 0;
}


