#include <iostream>
#include <queue>
#include <algorithm>
#include <cstdlib>
#include <map>
#include <fstream>
#include <utility>
#include <vector>
#include <ctime>
#include <climits>
#include <sstream>
#include <set>
#include <cstring>
#include <unordered_map>

#define int_max 0x3f3f3f3f 
#define cont continue
#define max_v 1100

using namespace std;

vector<int> arr;
int dp[max_v];
bool vis[max_v];
int n = 0;

bool visit(int ind){
	if(vis[ind]) return false;
	
	vis[ind] = true;
	
	for(int i = ind + 1; i<n; i++){
		if(arr[i] <= arr[ind]){
			if(visit(i)){
				break;
			}
		}
	}
	
	return true;
}

int main() {
  	
  	pair<int, int> sol = make_pair(1, 0);
  	
  	int y;
  	while(cin >> y){
  		arr.push_back(y);	
	}
	
	n = arr.size();
	
  	for(int i = 0; i<n; i++){
  		dp[i] = 1;
  		for(int j = 0; j<i; j++){
  			if(arr[i] <= arr[j]){
  				dp[i] = max(dp[i], dp[j] + 1);	
			}
		}
		sol.first = max(dp[i], sol.first);
	}
  	
  	
  	for(int i = 0; i<n; i++){
  		if(!vis[i]){
  			sol.second++;			
			visit(i);   	
		}
	}
  	
  	cout << sol.first << endl << sol.second;
  	
  	
	return 0;
}